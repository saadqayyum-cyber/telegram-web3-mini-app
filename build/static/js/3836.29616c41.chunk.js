(self.webpackChunkmango=self.webpackChunkmango||[]).push([[3836],{6492:(e,t,r)=>{"use strict";r.d(t,{E:()=>l,R:()=>s,S:()=>o,a:()=>c});var a=r(2776),n=r(97665),i=r(70592);const s=(()=>n.z.union([n.z.date().transform((e=>a.gH.from(Math.floor(e.getTime()/1e3)))),n.z.number().transform((e=>a.gH.from(e)))]))(),o=(()=>s.default(new Date(0)))(),l=(()=>s.default(new Date(Date.now()+31536e7)))();function c(e,t){if(!e)throw new i.x(t);return e}},16487:(e,t,r)=>{"use strict";r.d(t,{B:()=>l,C:()=>c,N:()=>u,a:()=>f,s:()=>h});var a=r(70592),n=r(97665),i=r(33409);const s=(()=>n.z.object({}).catchall(n.z.union([a.cx,n.z.unknown()])))(),o=(()=>n.z.union([n.z.array(n.z.array(s)).transform((e=>e.flat())),n.z.array(s),s]).optional().nullable())(),l=(()=>n.z.object({name:n.z.union([n.z.string(),n.z.number()]).optional().nullable(),description:n.z.string().nullable().optional().nullable(),image:a.cy.nullable().optional(),animation_url:a.cy.optional().nullable()}))(),c=(()=>l.extend({external_url:a.cy.nullable().optional(),background_color:a.cz.optional().nullable(),properties:o,attributes:o}).catchall(n.z.union([a.cx,n.z.unknown()])))(),u=(()=>n.z.union([c,n.z.string()]))(),f=(()=>c.extend({id:n.z.string(),uri:n.z.string(),image:n.z.string().nullable().optional(),external_url:n.z.string().nullable().optional(),animation_url:n.z.string().nullable().optional()}))();async function h(e,t,n,s){if(!(0,i.i)(n)){const i=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,o=e.getSigner(),l=e.getProvider(),c=new a.cs(o||l,n,i,e.options,e.storage),u=await e.getSignerAddress(),f=e.address;return(await c.read("allowance",[u,f])).lt(t)&&await c.sendTransaction("approve",[f,t]),s}s.value=t}},33836:(e,t,r)=>{"use strict";r.d(t,{A:()=>M,B:()=>Q,C:()=>K,D:()=>L,E:()=>R,F:()=>I,H:()=>J,I:()=>B,J:()=>A,K:()=>Y,L:()=>G,M:()=>le,S:()=>X,a:()=>E,f:()=>O,n:()=>ee,r:()=>ne,s:()=>ie,t:()=>se,u:()=>oe,v:()=>ce,w:()=>ue,x:()=>fe,y:()=>Z,z:()=>N});var a=r(64301),n=r(73594),i=r(84794),s=r(81237),o=r(19547),l=r(2776),c=r(89106),u=r(2614),f=r(70592),h=r(33409),m=r(4265),p=r(26382),d=r(90789),y=r.n(d),g=r(43336);class b{print(){b.print(this)}bufferIndexOf(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return this.binarySearch(e,t,p.Buffer.compare);return this.linearSearch(e,t,((e,t)=>e.equals(t)))}static binarySearch(e,t,r){let a=0,n=e.length-1;for(;a<=n;){const i=Math.floor((a+n)/2),s=r(e[i],t);if(0===s){for(let a=i-1;a>=0;a--)if(0!==r(e[a],t))return a+1;return 0}s<0?a=i+1:n=i-1}return-1}binarySearch(e,t,r){return b.binarySearch(e,t,r)}static linearSearch(e,t,r){for(let a=0;a<e.length;a++)if(r(e[a],t))return a;return-1}linearSearch(e,t,r){return b.linearSearch(e,t,r)}static bufferify(e){if(!p.Buffer.isBuffer(e)){if("object"===typeof e&&e.words)return p.Buffer.from(e.toString(v),"hex");if(b.isHexString(e))return p.Buffer.from(e.replace(/^0x/,""),"hex");if("string"===typeof e)return p.Buffer.from(e);if("bigint"===typeof e)return p.Buffer.from(e.toString(16),"hex");if(e instanceof Uint8Array)return p.Buffer.from(e.buffer);if("number"===typeof e){let t=e.toString();return t.length%2&&(t=`0${t}`),p.Buffer.from(t,"hex")}if(ArrayBuffer.isView(e))return p.Buffer.from(e.buffer,e.byteOffset,e.byteLength)}return e}bigNumberify(e){return b.bigNumberify(e)}static bigNumberify(e){if("bigint"===typeof e)return e;if("string"===typeof e)return e.startsWith("0x")&&b.isHexString(e)?BigInt("0x"+e.replace("0x","").toString()):BigInt(e);if(p.Buffer.isBuffer(e))return BigInt("0x"+e.toString("hex"));if(e instanceof Uint8Array)return function(e){const t=Array.from(e).map((e=>e.toString(16).padStart(2,"0"))).join("");return BigInt(`0x${t}`)}(e);if("number"===typeof e)return BigInt(e);throw new Error("cannot bigNumberify")}static isHexString(e){return"string"===typeof e&&/^(0x)?[0-9A-Fa-f]*$/.test(e)}static print(e){console.log(e.toString())}bufferToHex(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return b.bufferToHex(e,t)}static bufferToHex(e){return`${!(arguments.length>1&&void 0!==arguments[1])||arguments[1]?"0x":""}${(e||p.Buffer.alloc(0)).toString("hex")}`}bufferify(e){return b.bufferify(e)}bufferifyFn(e){return t=>{const r=e(t);if(p.Buffer.isBuffer(r))return r;if(this.isHexString(r))return p.Buffer.from(r.replace("0x",""),"hex");if("string"===typeof r)return p.Buffer.from(r);if("bigint"===typeof r)return p.Buffer.from(t.toString(16),"hex");if(ArrayBuffer.isView(r))return p.Buffer.from(r.buffer,r.byteOffset,r.byteLength);const a=function(e){const t=new Uint8Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=parseInt(e.substring(r,r+2),16);return t.buffer}(t.toString("hex")),n=function(e){const t=new Uint8Array(e);return Array.from(t).map((e=>e.toString(16).padStart(2,"0"))).join("")}(e(a));return p.Buffer.from(n,"hex")}}isHexString(e){return b.isHexString(e)}log2(e){return 1===e?0:1+this.log2(e/2|0)}zip(e,t){return e.map(((e,r)=>[e,t[r]]))}static hexZeroPad(e,t){return"0x"+e.replace("0x","").padStart(t,"0")}}var w=b;function v(e){const t=e.words,r=new ArrayBuffer(4*t.length),a=new Uint8Array(r);for(let n=0;n<t.length;n++)a[4*n]=t[n]>>24&255,a[4*n+1]=t[n]>>16&255,a[4*n+2]=t[n]>>8&255,a[4*n+3]=255&t[n];return r}class x extends w{duplicateOdd=!1;concatenator=(()=>p.Buffer.concat)();hashLeaves=!1;isBitcoinTree=!1;leaves=[];layers=[];sortLeaves=!1;sortPairs=!1;sort=!1;fillDefaultHash=null;complete=!1;constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(super(),r.complete){if(r.isBitcoinTree)throw new Error('option "complete" is incompatible with "isBitcoinTree"');if(r.duplicateOdd)throw new Error('option "complete" is incompatible with "duplicateOdd"')}if(this.isBitcoinTree=!!r.isBitcoinTree,this.hashLeaves=!!r.hashLeaves,this.sortLeaves=!!r.sortLeaves,this.sortPairs=!!r.sortPairs,this.complete=!!r.complete,r.fillDefaultHash)if("function"===typeof r.fillDefaultHash)this.fillDefaultHash=r.fillDefaultHash;else{if(!p.Buffer.isBuffer(r.fillDefaultHash)&&"string"!==typeof r.fillDefaultHash)throw new Error('method "fillDefaultHash" must be a function, Buffer, or string');this.fillDefaultHash=(e,t)=>r.fillDefaultHash}this.sort=!!r.sort,this.sort&&(this.sortLeaves=!0,this.sortPairs=!0),this.duplicateOdd=!!r.duplicateOdd,r.concatenator&&(this.concatenator=r.concatenator),this.hashFn=this.bufferifyFn(t),this.processLeaves(e)}getOptions(){return{complete:this.complete,isBitcoinTree:this.isBitcoinTree,hashLeaves:this.hashLeaves,sortLeaves:this.sortLeaves,sortPairs:this.sortPairs,sort:this.sort,fillDefaultHash:this.fillDefaultHash?.toString()??null,duplicateOdd:this.duplicateOdd}}processLeaves(e){if(this.hashLeaves&&(e=e.map(this.hashFn)),this.leaves=e.map(this.bufferify),this.sortLeaves&&(this.leaves=this.leaves.sort(p.Buffer.compare)),this.fillDefaultHash)for(let t=this.leaves.length;t<Math.pow(2,Math.ceil(Math.log2(this.leaves.length)));t++)this.leaves.push(this.bufferify(this.fillDefaultHash(t,this.hashFn)));this.createHashes(this.leaves)}createHashes(e){for(this.layers=[e];e.length>1;){const t=this.layers.length;this.layers.push([]);const r=this.complete&&1===t&&!Number.isInteger(Math.log2(e.length))?2*e.length-2**Math.ceil(Math.log2(e.length)):e.length;for(let a=0;a<e.length;a+=2){if(a>=r){this.layers[t].push(...e.slice(r));break}if(a+1===e.length&&e.length%2===1){const r=e[e.length-1];let n=r;if(this.isBitcoinTree){n=this.hashFn(this.concatenator([y()(r),y()(r)])),n=y()(this.hashFn(n)),this.layers[t].push(n);continue}if(!this.duplicateOdd){this.layers[t].push(e[a]);continue}}const n=e[a],i=a+1===e.length?n:e[a+1];let s=null;s=this.isBitcoinTree?[y()(n),y()(i)]:[n,i],this.sortPairs&&s.sort(p.Buffer.compare);let o=this.hashFn(this.concatenator(s));this.isBitcoinTree&&(o=y()(this.hashFn(o))),this.layers[t].push(o)}e=this.layers[t]}}addLeaf(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(e=this.hashFn(e)),this.processLeaves(this.leaves.concat(e))}addLeaves(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(e=e.map(this.hashFn)),this.processLeaves(this.leaves.concat(e))}getLeaves(e){return Array.isArray(e)?(this.hashLeaves&&(e=e.map(this.hashFn),this.sortLeaves&&(e=e.sort(p.Buffer.compare))),this.leaves.filter((t=>-1!==this.bufferIndexOf(e,t,this.sortLeaves)))):this.leaves}getLeaf(e){return e<0||e>this.leaves.length-1?p.Buffer.from([]):this.leaves[e]}getLeafIndex(e){e=this.bufferify(e);const t=this.getLeaves();for(let r=0;r<t.length;r++){if(t[r].equals(e))return r}return-1}getLeafCount(){return this.leaves.length}getHexLeaves(){return this.leaves.map((e=>this.bufferToHex(e)))}static marshalLeaves(e){return JSON.stringify(e.map((e=>x.bufferToHex(e))),null,2)}static unmarshalLeaves(e){let t=null;if("string"===typeof e)t=JSON.parse(e);else{if(!(e instanceof Object))throw new Error("Expected type of string or object");t=e}if(!t)return[];if(!Array.isArray(t))throw new Error("Expected JSON string to be array");return t.map(x.bufferify)}getLayers(){return this.layers}getHexLayers(){return this.layers.reduce(((e,t)=>(Array.isArray(t)?e.push(t.map((e=>this.bufferToHex(e)))):e.push(t),e)),[])}getLayersFlat(){const e=this.layers.reduce(((e,t)=>(Array.isArray(t)?e.unshift(...t):e.unshift(t),e)),[]);return e.unshift(p.Buffer.from([0])),e}getHexLayersFlat(){return this.getLayersFlat().map((e=>this.bufferToHex(e)))}getLayerCount(){return this.getLayers().length}getRoot(){return 0===this.layers.length?p.Buffer.from([]):this.layers[this.layers.length-1][0]||p.Buffer.from([])}getHexRoot(){return this.bufferToHex(this.getRoot())}getProof(e,t){if("undefined"===typeof e)throw new Error("leaf is required");e=this.bufferify(e);const r=[];if(!Number.isInteger(t)){t=-1;for(let r=0;r<this.leaves.length;r++)0===p.Buffer.compare(e,this.leaves[r])&&(t=r)}if(t<=-1)return[];for(let a=0;a<this.layers.length;a++){const e=this.layers[a],n=t%2,i=n?t-1:this.isBitcoinTree&&t===e.length-1&&a<this.layers.length-1?t:t+1;i<e.length&&r.push({position:n?"left":"right",data:e[i]}),t=t/2|0}return r}getHexProof(e,t){return this.getProof(e,t).map((e=>this.bufferToHex(e.data)))}getProofs(){const e=[];return this.getProofsDFS(this.layers.length-1,0,[],e),e}getProofsDFS(e,t,r,a){const n=t%2;if(-1===e)return void(n||a.push([...r].reverse()));if(t>=this.layers[e].length)return;const i=this.layers[e],s=n?t-1:t+1;let o=!1;s<i.length&&(o=!0,r.push({position:n?"left":"right",data:i[s]}));const l=2*t,c=2*t+1;this.getProofsDFS(e-1,l,r,a),this.getProofsDFS(e-1,c,r,a),o&&r.splice(r.length-1,1)}getHexProofs(){return this.getProofs().map((e=>this.bufferToHex(e.data)))}getPositionalHexProof(e,t){return this.getProof(e,t).map((e=>["left"===e.position?0:1,this.bufferToHex(e.data)]))}getProofIndices(e,t){const r=2**t;let a=new Set;for(const l of e){let e=r+l;for(;e>1;)a.add(1^e),e=e/2|0}const n=e.map((e=>r+e)),i=Array.from(a).sort(((e,t)=>e-t)).reverse();a=n.concat(i);const s=new Set,o=[];for(let l of a)if(!s.has(l))for(o.push(l);l>1&&(s.add(l),s.has(1^l));)l=l/2|0;return o.filter((t=>!e.includes(t-r)))}getProofIndicesForUnevenTree(e,t){const r=Math.ceil(Math.log2(t)),a=[];for(let s=0;s<r;s++){t%2!==0&&a.push({index:s,leavesCount:t}),t=Math.ceil(t/2)}const n=[];let i=e;for(let s=0;s<r;s++){let e=i.map((e=>e%2===0?e+1:e-1)).filter((e=>!i.includes(e)));const t=a.find((e=>{let{index:t}=e;return t===s}));t&&i.includes(t.leavesCount-1)&&(e=e.slice(0,-1)),n.push(e),i=[...new Set(i.map((e=>e%2===0?e/2:e%2===0?(e+1)/2:(e-1)/2)))]}return n}getMultiProof(e,t){this.complete||console.warn("Warning: For correct multiProofs it's strongly recommended to set complete: true"),t||(t=e,e=this.getLayersFlat());if(this.isUnevenTree()&&t.every(Number.isInteger))return this.getMultiProofForUnevenTree(t);if(!t.every(Number.isInteger)){let e=t;this.sortPairs&&(e=e.sort(p.Buffer.compare));let r=e.map((e=>this.bufferIndexOf(this.leaves,e,this.sortLeaves))).sort(((e,t)=>e===t?0:e>t?1:-1));if(!r.every((e=>-1!==e)))throw new Error("Element does not exist in Merkle tree");const a=[],n=[];let i=[];for(let t=0;t<this.layers.length;t++){const e=this.layers[t];for(let t=0;t<r.length;t++){const s=r[t],o=this.getPairNode(e,s);a.push(e[s]),o&&n.push(o),i.push(s/2|0)}r=i.filter(((e,t,r)=>r.indexOf(e)===t)),i=[]}return n.filter((e=>!a.includes(e)))}return this.getProofIndices(t,Math.log2(e.length/2|0)).map((t=>e[t]))}getMultiProofForUnevenTree(e,t){t||(t=e,e=this.getLayers());let r=[],a=t;for(const n of e){const e=[];for(const r of a){if(r%2===0){const t=r+1;if(!a.includes(t)&&n[t]){e.push(n[t]);continue}}const t=r-1;a.includes(t)||!n[t]||e.push(n[t])}r=r.concat(e);const t=new Set;for(const r of a)r%2!==0?r%2!==0?t.add((r-1)/2):t.add((r+1)/2):t.add(r/2);a=Array.from(t)}return r}getHexMultiProof(e,t){return this.getMultiProof(e,t).map((e=>this.bufferToHex(e)))}getProofFlags(e,t){if(!Array.isArray(e)||e.length<=0)throw new Error("Invalid Inputs!");let r;if(r=e.every(Number.isInteger)?[...e].sort(((e,t)=>e===t?0:e>t?1:-1)):e.map((e=>this.bufferIndexOf(this.leaves,e,this.sortLeaves))).sort(((e,t)=>e===t?0:e>t?1:-1)),!r.every((e=>-1!==e)))throw new Error("Element does not exist in Merkle tree");const a=t.map((e=>this.bufferify(e))),n=[],i=[];for(let s=0;s<this.layers.length;s++){const e=this.layers[s];r=r.reduce(((t,r)=>{if(!n.includes(e[r])){const t=this.getPairNode(e,r),s=a.includes(e[r])||a.includes(t);t&&i.push(!s),n.push(e[r]),n.push(t)}return t.push(r/2|0),t}),[])}return i}verify(e,t,r){let a=this.bufferify(t);if(r=this.bufferify(r),!Array.isArray(e)||!t||!r)return!1;for(let n=0;n<e.length;n++){const t=e[n];let r=null,i=null;if("string"===typeof t)r=this.bufferify(t),i=!0;else if(Array.isArray(t))i=0===t[0],r=this.bufferify(t[1]);else if(p.Buffer.isBuffer(t))r=t,i=!0;else{if(!(t instanceof Object))throw new Error("Expected node to be of type string or object");r=this.bufferify(t.data),i="left"===t.position}const s=[];this.isBitcoinTree?(s.push(y()(a)),s[i?"unshift":"push"](y()(r)),a=this.hashFn(this.concatenator(s)),a=y()(this.hashFn(a))):this.sortPairs?-1===p.Buffer.compare(a,r)?(s.push(a,r),a=this.hashFn(this.concatenator(s))):(s.push(r,a),a=this.hashFn(this.concatenator(s))):(s.push(a),s[i?"unshift":"push"](r),a=this.hashFn(this.concatenator(s)))}return 0===p.Buffer.compare(a,r)}verifyMultiProof(e,t,r,a,n){if(this.isUnevenTree())return this.verifyMultiProofForUnevenTree(e,t,r,a,n);const i=Math.ceil(Math.log2(a));e=this.bufferify(e),r=r.map((e=>this.bufferify(e))),n=n.map((e=>this.bufferify(e)));const s={};for(const[c,u]of this.zip(t,r))s[2**i+c]=u;for(const[c,u]of this.zip(this.getProofIndices(t,i),n))s[c]=u;let o=Object.keys(s).map((e=>Number(e))).sort(((e,t)=>e-t));o=o.slice(0,o.length-1);let l=0;for(;l<o.length;){const e=o[l];if(e>=2&&{}.hasOwnProperty.call(s,1^e)){let t=[s[e-e%2],s[e-e%2+1]];this.sortPairs&&(t=t.sort(p.Buffer.compare));const r=t[1]?this.hashFn(this.concatenator(t)):t[0];s[e/2|0]=r,o.push(e/2|0)}l+=1}return!t.length||{}.hasOwnProperty.call(s,1)&&s[1].equals(e)}verifyMultiProofWithFlags(e,t,r,a){e=this.bufferify(e),t=t.map(this.bufferify),r=r.map(this.bufferify);const n=t.length,i=a.length,s=[];let o=0,l=0,c=0;for(let u=0;u<i;u++){const e=[a[u]?o<n?t[o++]:s[l++]:r[c++],o<n?t[o++]:s[l++]].sort(p.Buffer.compare);s[u]=this.hashFn(this.concatenator(e))}return 0===p.Buffer.compare(s[i-1],e)}verifyMultiProofForUnevenTree(e,t,r,a,n){e=this.bufferify(e),r=r.map((e=>this.bufferify(e))),n=n.map((e=>this.bufferify(e)));const i=this.calculateRootForUnevenTree(t,r,a,n);return e.equals(i)}getDepth(){return this.getLayers().length-1}getLayersAsObject(){const e=this.getLayers().map((e=>e.map((e=>this.bufferToHex(e,!1))))),t=[];for(let r=0;r<e.length;r++){const a=[];for(let n=0;n<e[r].length;n++){const i={[e[r][n]]:null};if(t.length){i[e[r][n]]={};const a=t.shift(),s=Object.keys(a)[0];if(i[e[r][n]][s]=a[s],t.length){const a=t.shift(),s=Object.keys(a)[0];i[e[r][n]][s]=a[s]}}a.push(i)}t.push(...a)}return t[0]}resetTree(){this.leaves=[],this.layers=[]}getPairNode(e,t){const r=t%2===0?t+1:t-1;return r<e.length?e[r]:null}toTreeString(){const e=this.getLayersAsObject();return(0,g.asTree)(e,!0,!1)}toString(){return this.toTreeString()}isUnevenTree(e){const t=e?.length||this.getDepth();return!this.isPowOf2(t)}isPowOf2(e){return e&&!(e&e-1)}calculateRootForUnevenTree(e,t,r,a){const n=this.zip(e,t).sort(((e,t)=>{let[r]=e,[a]=t;return r-a})),i=n.map((e=>{let[t]=e;return t})),s=this.getProofIndicesForUnevenTree(i,r);let o=0;const l=[];for(let u=0;u<s.length;u++){const e=s[u],t=o;o+=e.length,l[u]=this.zip(e,a.slice(t,o))}const c=[n];for(let u=0;u<l.length;u++){const e=l[u].concat(c[u]).sort(((e,t)=>{let[r]=e,[a]=t;return r-a})).map((e=>{let[,t]=e;return t})),t=c[u].map((e=>{let[t]=e;return t})),r=[...new Set(t.map((e=>e%2===0?e/2:e%2===0?(e+1)/2:(e-1)/2)))],a=[];for(let n=0;n<r.length;n++){const t=r[n],i=e[2*n],s=e[2*n+1],o=s?this.hashFn(this.concatenator([i,s])):i;a.push([t,o])}c.push(a)}return c[c.length-1][0][1]}}var S=r(6492),T=r(97665),P=r(16487),k=r(92073),C=r(26382).Buffer;function B(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot,pricePerToken:e.pricePerToken,currency:e.currency,quantityLimitPerTransaction:e.maxClaimablePerWallet,waitTimeInSecondsBetweenClaims:e.waitTimeInSecondsBetweenClaims||0}}function A(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot,pricePerToken:e.pricePerToken,currency:e.currency,quantityLimitPerWallet:e.maxClaimablePerWallet,metadata:e.metadata||""}}function L(e,t){return"unlimited"===e?a.Is:n.parseUnits(e,t)}async function H(e){const t=25e3,r=Array.from({length:Math.ceil(e.length/t)},((r,a)=>e.slice(a*t,a*t+t))),a=[],n=await Promise.all(r.map((e=>f.bM.parseAsync(e))));for(const i of n)a.push(...i);return a}let I=function(e){return e[e.V1=1]="V1",e[e.V2=2]="V2",e}({});class z{constructor(e,t,r,a,n){this.storage=e,this.shardNybbles=a,this.baseUri=t,this.originalEntriesUri=r,this.tokenDecimals=n,this.shards={},this.trees={}}static async fromUri(e,t){try{const r=await t.downloadJSON(e);if(r.isShardedMerkleTree)return z.fromShardedMerkleTreeInfo(r,t)}catch(r){return}}static async fromShardedMerkleTreeInfo(e,t){return new z(t,e.baseUri,e.originalEntriesUri,e.shardNybbles,e.tokenDecimals)}static hashEntry(e,t,r,a){switch(a){case I.V1:return i.keccak256(["address","uint256"],[e.address,L(e.maxClaimable,t)]);case I.V2:return i.keccak256(["address","uint256","uint256","address"],[e.address,L(e.maxClaimable,t),L(e.price||"unlimited",r),e.currencyAddress||s.L])}}static async fetchAndCacheDecimals(e,t,r){if(!r)return 18;let a=e[r];if(void 0===a){a=(await(0,h.f)(t,r)).decimals,e[r]=a}return a}static async buildAndUpload(e,t,r,a,n){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2;const s=await H(e),l={};for(const o of s){const e=o.address.slice(2,2+i).toLowerCase();void 0===l[e]&&(l[e]=[]),l[e].push(o)}const c={},u=await Promise.all(Object.entries(l).map((async e=>{let[a,i]=e;return[a,new x(await Promise.all(i.map((async e=>{const a=await z.fetchAndCacheDecimals(c,r,e.currencyAddress);return z.hashEntry(e,t,a,n)}))),o.keccak256,{sort:!0}).getHexRoot()]}))),f=Object.fromEntries(u),h=new x(Object.values(f),o.keccak256,{sort:!0}),m=[];for(const[o,b]of Object.entries(l)){const e={proofs:h.getProof(f[o]).map((e=>"0x"+e.data.toString("hex"))),entries:b};m.push({data:JSON.stringify(e),name:`${o}.json`})}const p=await a.uploadBatch(m),d=p[0].slice(0,p[0].lastIndexOf("/")),y=await a.upload(s),g={merkleRoot:h.getHexRoot(),baseUri:d,originalEntriesUri:y,shardNybbles:i,tokenDecimals:t,isShardedMerkleTree:!0};return{shardedMerkleInfo:g,uri:await a.upload(g)}}async getProof(e,t,r){const a=e.slice(2,2+this.shardNybbles).toLowerCase();let n=this.shards[a];const i={};if(void 0===n)try{const e=this.baseUri.endsWith("/")?this.baseUri:`${this.baseUri}/`;n=this.shards[a]=await this.storage.downloadJSON(`${e}${a}.json`);const s=await Promise.all(n.entries.map((async e=>{const a=await z.fetchAndCacheDecimals(i,t,e.currencyAddress);return z.hashEntry(e,this.tokenDecimals,a,r)})));this.trees[a]=new x(s,o.keccak256,{sort:!0})}catch(h){return null}const s=n.entries.find((t=>t.address.toLowerCase()===e.toLowerCase()));if(!s)return null;const l=await z.fetchAndCacheDecimals(i,t,s.currencyAddress),c=z.hashEntry(s,this.tokenDecimals,l,r),u=this.trees[a].getProof(c).map((e=>"0x"+e.data.toString("hex")));return f.bN.parseAsync({...s,proof:u.concat(n.proofs)})}async getAllEntries(){try{return await this.storage.downloadJSON(this.originalEntriesUri)}catch(e){return console.warn("Could not fetch original snapshot entries",e),[]}}}async function O(e,t,r,a,n,i){if(!r)return null;const s=r[t];if(s){const r=await n.downloadJSON(s);if(r.isShardedMerkleTree&&r.merkleRoot===t){const t=await z.fromShardedMerkleTreeInfo(r,n);return await t.getProof(e,a,i)}const o=await f.bO.parseAsync(r);if(t===o.merkleRoot)return o.claims.find((t=>t.address.toLowerCase()===e.toLowerCase()))||null}return null}function N(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot.toString(),pricePerToken:e.pricePerToken,currency:e.currency,maxClaimablePerWallet:e.quantityLimitPerTransaction,waitTimeInSecondsBetweenClaims:e.waitTimeInSecondsBetweenClaims}}function M(e){return{startTimestamp:e.startTimestamp,maxClaimableSupply:e.maxClaimableSupply,supplyClaimed:e.supplyClaimed,merkleRoot:e.merkleRoot.toString(),pricePerToken:e.pricePerToken,currency:e.currency,maxClaimablePerWallet:e.quantityLimitPerWallet,waitTimeInSecondsBetweenClaims:0,metadata:e.metadata}}async function E(e,t,a,i,s){const o=e.getSigner(),c=e.getProvider(),u=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,h=new f.cs(o||c,t,u,e.options,e.storage),m=await e.getSignerAddress(),p=e.address,d=await h.read("allowance",[m,p]),y=l.gH.from(a).mul(l.gH.from(i)).div(n.parseUnits("1",s));d.lt(y)&&await h.sendTransaction("approve",[p,d.add(y)])}async function R(e,t,r,i,o,u,f,p,d){let y=L(r.maxClaimablePerWallet,o),g=[c.hexZeroPad([0],32)],b=r.price,w=r.currencyAddress;try{if(!r.merkleRootHash.toString().startsWith(s.L)){const t=await O(e,r.merkleRootHash.toString(),await i(),u.getProvider(),f,d);if(t)g=t.proof,y="unlimited"===t.maxClaimable?a.Is:n.parseUnits(t.maxClaimable,o),b=void 0===t.price||"unlimited"===t.price?a.Is:await(0,m.n)(u.getProvider(),t.price,t.currencyAddress||s.L),w=t.currencyAddress||s.L;else if(d===I.V1)throw new Error("No claim found for this address")}}catch(T){if("No claim found for this address"===T?.message)throw T;console.warn("failed to check claim condition merkle root hash, continuing anyways",T)}const v=await u.getCallOverrides()||{},x=b.toString()!==a.Is.toString()?b:r.price,S=w!==s.L?w:r.currencyAddress;return x.gt(0)&&((0,h.i)(S)?v.value=l.gH.from(x).mul(t).div(n.parseUnits("1",o)):p&&await E(u,S,x,t,o)),{overrides:v,proofs:g,maxClaimable:y,price:x,currencyAddress:S,priceInProof:b,currencyAddressInProof:w}}const F=(()=>T.z.object({name:T.z.string(),symbol:T.z.string(),decimals:T.z.number()}))(),U=(()=>F.extend({value:f.b5,displayValue:T.z.string()}))(),D=(()=>T.z.object({name:T.z.string().optional()}).catchall(T.z.unknown()))(),j=(()=>T.z.object({startTime:S.S,currencyAddress:T.z.string().default(f.aV),price:f.cw.default(0),maxClaimableSupply:f.cA,maxClaimablePerWallet:f.cA,waitInSeconds:f.b6.default(0),merkleRootHash:f.cB.default(c.hexZeroPad([0],32)),snapshot:T.z.optional(f.bM).nullable(),metadata:D.optional()}))(),W=(()=>T.z.array(j))(),q=(()=>j.extend({availableSupply:f.cA,currentMintSupply:f.cA,currencyMetadata:U.default({value:l.gH.from("0"),displayValue:"0",symbol:"",decimals:18,name:""}),price:f.b5,waitInSeconds:f.b5,startTime:f.b5.transform((e=>new Date(1e3*e.toNumber()))),snapshot:f.bM.optional().nullable()}))();async function V(e,t,r,a,n){const i=[],s=await Promise.all(e.map((async e=>{if(e.snapshot&&e.snapshot.length>0){const s=await async function(e,t,r,a,n){const i=await H(e),s=i.map((e=>e.address));if(new Set(s).size<s.length)throw new f.s;const o=await z.buildAndUpload(i,t,r,a,n);return{merkleRoot:o.shardedMerkleInfo.merkleRoot,snapshotUri:o.uri}}(e.snapshot,t,r,a,n);i.push(s),e.merkleRootHash=s.merkleRoot}else e.merkleRootHash=c.hexZeroPad([0],32);return e})));return{inputsWithSnapshots:s,snapshotInfos:i}}async function J(e,t,r,a,n){const{inputsWithSnapshots:i,snapshotInfos:o}=await V(e,t,r,a,n),c=await W.parseAsync(i),u=(await Promise.all(c.map((e=>async function(e,t,r,a){const n=e.currencyAddress===s.L?f.aV:e.currencyAddress,i=L(e.maxClaimableSupply,t),o=L(e.maxClaimablePerWallet,t);let l;return e.metadata&&(l="string"===typeof e.metadata?e.metadata:await a.upload(e.metadata)),{startTimestamp:e.startTime,maxClaimableSupply:i,supplyClaimed:0,maxClaimablePerWallet:o,pricePerToken:await(0,m.n)(r,e.price,n),currency:n,merkleRoot:e.merkleRootHash.toString(),waitTimeInSecondsBetweenClaims:e.waitInSeconds||0,metadata:l}}(e,t,r,a))))).sort(((e,t)=>function(e,t){const r=l.gH.from(e),a=l.gH.from(t);return r.eq(a)?0:r.gt(a)?1:-1}(e.startTimestamp,t.startTimestamp)));return{snapshotInfos:o,sortedConditions:u}}async function $(e,t,r){if(!t)return null;const a=t[e];if(a){const t=await r.downloadJSON(a);if(t.isShardedMerkleTree&&t.merkleRoot===e){const e=await z.fromUri(a,r);return e?.getAllEntries()||null}{const r=await f.bO.parseAsync(t);if(e===r.merkleRoot)return r.claims.map((e=>({address:e.address,maxClaimable:e.maxClaimable,price:e.price,currencyAddress:e.currencyAddress})))}}return null}function _(e,t){return e.toString()===a.Is.toString()?"unlimited":n.formatUnits(e,t)}async function Z(e,t,r,a,n,i){const s=await(0,h.a)(r,e.currency,e.pricePerToken),o=_(e.maxClaimableSupply,t),c=_(e.maxClaimablePerWallet,t),u=_(l.gH.from(e.maxClaimableSupply).sub(e.supplyClaimed),t),f=_(e.supplyClaimed,t);let m;return e.metadata&&(m=await n.downloadJSON(e.metadata)),q.parseAsync({startTime:e.startTimestamp,maxClaimableSupply:o,maxClaimablePerWallet:c,currentMintSupply:f,availableSupply:u,waitInSeconds:e.waitTimeInSecondsBetweenClaims?.toString(),price:l.gH.from(e.pricePerToken),currency:e.currency,currencyAddress:e.currency,currencyMetadata:s,merkleRootHash:e.merkleRoot,snapshot:i?await $(e.merkleRoot,a,n):void 0,metadata:m})}async function Y(e,t,r){if(e>=r.length)throw Error(`Index out of bounds - got index: ${e} with ${r.length} conditions`);const a=r[e].currencyMetadata.decimals,i=r[e].price,s=n.formatUnits(i,a),o=await j.parseAsync({...r[e],price:s,...t}),l=await q.parseAsync({...o,price:i});return r.map(((t,r)=>{let i;i=r===e?l:t;const s=n.formatUnits(i.price,a);return{...i,price:s}}))}let K=function(e){return e.NotEnoughSupply="There is not enough supply to claim.",e.AddressNotAllowed="This address is not on the allowlist.",e.WaitBeforeNextClaimTransaction="Not enough time since last claim transaction. Please wait.",e.ClaimPhaseNotStarted="Claim phase has not started yet.",e.AlreadyClaimed="You have already claimed the token.",e.WrongPriceOrCurrency="Incorrect price or currency.",e.OverMaxClaimablePerWallet="Cannot claim more than maximum allowed quantity.",e.NotEnoughTokens="There are not enough tokens in the wallet to pay for the claim.",e.NoActiveClaimPhase="There is no active claim phase at the moment. Please check back in later.",e.NoClaimConditionSet="There is no claim condition set.",e.NoWallet="No wallet connected.",e.Unknown="No claim conditions found.",e}({});function G(e){if(void 0===e){const e=C.alloc(16);return(0,k.A)({},e),c.hexlify(u.YW(e.toString("hex")))}return c.hexlify(e)}const Q=(()=>T.z.object({to:f.b9.refine((e=>e.toLowerCase()!==s.L),{message:"Cannot create payload to mint to zero address"}),price:f.cw.default(0),currencyAddress:f.b8.default(f.aV),mintStartTime:S.S,mintEndTime:S.E,uid:T.z.string().optional().transform((e=>G(e))),primarySaleRecipient:f.b9.default(s.L)}))(),X=(()=>Q.extend({quantity:f.cw}))(),ee=(()=>X.extend({mintStartTime:f.b5,mintEndTime:f.b5}))(),te=(()=>Q.extend({metadata:P.N,royaltyRecipient:T.z.string().default(s.L),royaltyBps:f.cC.default(0)}))(),re=(()=>te.extend({metadata:P.N.default(""),uri:T.z.string(),royaltyBps:f.b5,mintStartTime:f.b5,mintEndTime:f.b5}))(),ae=(()=>te.extend({metadata:P.N.default(""),quantity:f.b6}))(),ne=(()=>ae.extend({tokenId:f.b6}))(),ie=(()=>re.extend({tokenId:f.b5,quantity:f.b5}))(),se=(()=>te.extend({metadata:P.N.default(""),quantity:f.b5.default(1)}))(),oe=(()=>re.extend({quantity:f.b5.default(1)}))(),le=[{name:"to",type:"address"},{name:"primarySaleRecipient",type:"address"},{name:"quantity",type:"uint256"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],ce=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],ue=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"tokenId",type:"uint256"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],fe=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}]},43336:function(e){e.exports=function(){function e(e,t){var r=t?"\u2514":"\u251c";return r+=e?"\u2500 ":"\u2500\u2500\u2510"}function t(e,t){var r=[];for(var a in e)e.hasOwnProperty(a)&&(t&&"function"===typeof e[a]||r.push(a));return r}function r(a,n,i,s,o,l,c){var u,f,h="",m=0,p=s.slice(0);if(p.push([n,i])&&s.length>0&&(s.forEach((function(e,t){t>0&&(h+=(e[1]?" ":"\u2502")+"  "),f||e[0]!==n||(f=!0)})),h+=e(a,i)+a,o&&("object"!==typeof n||n instanceof Date)&&(h+=": "+n),f&&(h+=" (circular ref.)"),c(h)),!f&&"object"===typeof n){var d=t(n,l);d.forEach((function(e){u=++m===d.length,r(e,n[e],u,p,o,l,c)}))}}var a={asLines:function(e,t,a,n){r(".",e,!1,[],t,"function"!==typeof a&&a,n||a)},asTree:function(e,t,a){var n="";return r(".",e,!1,[],t,a,(function(e){n+=e+"\n"})),n}};return a}()},90789:(e,t,r)=>{var a=r(26382).Buffer;e.exports=function(e){for(var t=new a(e.length),r=0,n=e.length-1;r<=n;++r,--n)t[r]=e[n],t[n]=e[r];return t}}}]);
//# sourceMappingURL=3836.29616c41.chunk.js.map