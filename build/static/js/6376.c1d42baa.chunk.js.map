{"version":3,"file":"static/js/6376.c1d42baa.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`Connected but failed to switch to desired chain ${chainId}`, e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!this._provider) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!this._provider) {\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      this._client = new CoinbaseWalletSDK(this.options);\n      const walletExtensionChainId = this._client.walletExtension?.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.chainId;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpc[0];\n      this._provider = this._client.makeWeb3Provider(jsonRpcUrl, chainId);\n    }\n    return this._provider;\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${id}`,\n        slug: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this._isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (this._isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  _isUserRejectedRequestError(error) {\n    return /(user rejected)/i.test(error.message);\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!this._client) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return this._client.getQrUrl();\n  }\n}\n\nexport { CoinbaseWalletConnector };\n","import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n"],"names":["CoinbaseWalletConnector","WagmiConnector","constructor","_ref","chains","options","super","reloadOnDisconnect","_defineProperty","this","walletIds","coinbase","accounts","length","emit","account","utils","chainId","id","normalizeChainId","unsupported","isChainUnsupported","chain","connect","arguments","undefined","provider","getProvider","setupListeners","type","enable","getChainId","switchChain","e","console","error","providers","test","message","UserRejectedRequestError","disconnect","_provider","removeListener","onAccountsChanged","onChainChanged","onDisconnect","close","getAccount","request","method","Error","CoinbaseWalletSDK","default","_client","walletExtensionChainId","walletExtension","find","chain_","jsonRpcUrl","rpc","makeWeb3Provider","getSigner","Promise","all","isAuthorized","params","x","name","slug","nativeCurrency","decimals","symbol","testnet","shortName","ChainNotConfiguredError","connectorId","code","chainName","rpcUrls","getValidPublicRPCUrl","blockExplorerUrls","getBlockExplorerUrls","addError","_isUserRejectedRequestError","AddChainError","SwitchChainError","on","getQrUrl","RpcError","cause","data","Number","isInteger","JSON","stringify","ProviderRpcError","ConnectorNotFoundError","ResourceUnavailableError","EventEmitter","defaultChains","explorers","map","url","some","updateChains","parseInt","trim","substring"],"sourceRoot":""}