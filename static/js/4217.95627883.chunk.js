"use strict";(self.webpackChunkmango=self.webpackChunkmango||[]).push([[4217],{99223:(t,i,n)=>{function s(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}n.d(i,{n:()=>s})},34217:(t,i,n)=>{n.d(i,{LocalWalletConnector:()=>g});var s=n(66898),e=n(99223),r=n(60091),a=n(3494),o=n(70592),h=n(38298),c=n(12220);n(64598);class d extends h.Signer{constructor(t){super(),this.signer=t,(0,c.defineReadOnly)(this,"provider",t.provider)}async getAddress(){return await this.signer.getAddress()}async signMessage(t){return await this.signer.signMessage(t)}async signTransaction(t){return await this.signer.signTransaction(t)}connect(t){return new d(this.signer.connect(t))}_signTypedData(t,i,n){return this.signer._signTypedData(t,i,n)}async sendTransaction(t){if(!this.provider)throw new Error("Provider not found");const i={...await(0,a.g)(this.provider),...t};return await this.signer.sendTransaction(i)}}class g extends r.C{constructor(t){super(),(0,s._)(this,"id","local_wallet"),(0,s._)(this,"name","Local Wallet"),(0,s._)(this,"shimDisconnectKey","localWallet.shimDisconnect"),(0,s._)(this,"onChainChanged",(t=>{const i=(0,e.n)(t),n=!this.options.chains.find((t=>t.chainId===i));this.emit("change",{chain:{id:i,unsupported:n}})})),this.options=t}async connect(t){t.chainId&&this.switchChain(t.chainId);const i=await this.getSigner();return await i.getAddress()}async disconnect(){this._provider=void 0,this._signer=void 0}async getAddress(){const t=await this.getSigner();if(!t)throw new Error("No signer found");return await t.getAddress()}async isConnected(){try{return!!await this.getAddress()}catch{return!1}}async getProvider(){return this._provider||(this._provider=(0,o.a_)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),this._provider}async getSigner(){if(!this._signer){const t=await this.getProvider();this._signer=p(this.options.ethersWallet,t)}return this._signer}async switchChain(t){const i=this.options.chains.find((i=>i.chainId===t));if(!i)throw new Error(`Chain not found for chainId ${t}, please add it to the chains property when creating this wallet`);this._provider=(0,o.a_)(i,{clientId:this.options.clientId,secretKey:this.options.secretKey}),this._signer=p(this.options.ethersWallet,this._provider),this.onChainChanged(t)}async setupListeners(){}updateChains(t){this.options.chains=t}}function p(t,i){let n=t;return i&&(n=t.connect(i)),new d(n)}}}]);
//# sourceMappingURL=4217.95627883.chunk.js.map