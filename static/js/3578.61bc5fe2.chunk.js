"use strict";(self.webpackChunkmango=self.webpackChunkmango||[]).push([[3578],{78527:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},48394:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(3494),s=e(70592);class n{featureName=(()=>s.du.name)();constructor(t){this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return s.bH.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}set=(()=>(0,a.f)((async t=>{const r=await s.bH.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})})))()}},31615:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(3494),s=e(70592);class n{featureName=(()=>s.d7.name)();constructor(t){this.contractWrapper=t}async getRecipient(){return await this.contractWrapper.read("primarySaleRecipient",[])}setRecipient=(()=>(0,a.f)((async t=>a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPrimarySaleRecipient",args:[t]}))))()}},28846:(t,r,e)=>{e.d(r,{S:()=>n});var a=e(3494),s=e(87151);class n{get chainId(){return this._chainId}constructor(t,r,e){this.contractWrapper=t,this.storage=r,this.erc20=new s.E(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async get(){return this.erc20.get()}async balance(){return await this.erc20.balance()}async balanceOf(t){return this.erc20.balanceOf(t)}async totalSupply(){return await this.erc20.totalSupply()}async allowance(t){return await this.erc20.allowance(t)}async allowanceOf(t,r){return await this.erc20.allowanceOf(t,r)}transfer=(()=>(0,a.f)((async(t,r)=>this.erc20.transfer.prepare(t,r))))();transferFrom=(()=>(0,a.f)((async(t,r,e)=>this.erc20.transferFrom.prepare(t,r,e))))();setAllowance=(()=>(0,a.f)((async(t,r)=>this.erc20.setAllowance.prepare(t,r))))();transferBatch=(()=>(0,a.f)((async t=>this.erc20.transferBatch.prepare(t))))()}},73578:(t,r,e)=>{e.r(r),e.d(r,{Token:()=>m});var a=e(81237),s=e(2776),n=e(70592),c=e(3494),i=e(36859),o=e(33409),p=e(78527),h=e(48394),l=e(90755),d=e(31615),f=e(87151),g=e(28846);e(6373),e(40462),e(92377),e(122);class u{constructor(t,r){this.contractWrapper=t,this.events=r}async getAllHolderBalances(){const t=(await this.events.getEvents("Transfer")).map((t=>t.data)),r={};t.forEach((t=>{const e=t?.from,n=t?.to,c=t?.value;e!==a.L&&(e in r||(r[e]=s.gH.from(0)),r[e]=r[e].sub(c)),n!==a.L&&(n in r||(r[n]=s.gH.from(0)),r[n]=r[n].add(c))}));const e=Object.entries(r),n=await Promise.all(e.map((t=>{let[,r]=t;return(0,o.a)(this.contractWrapper.getProvider(),this.contractWrapper.address,r)})));return e.map(((t,r)=>{let[e]=t;return{holder:e,balance:n[r]}}))}}class m extends g.S{static contractRoles=(()=>n.dG)();constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,c=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.cs(t,r,s,a,e),e,c),this.abi=n.bj.parse(s||[]),this.metadata=new i.C(this.contractWrapper,n.cb,this.storage),this.app=new i.b(this.contractWrapper,this.metadata,this.storage),this.roles=new l.C(this.contractWrapper,m.contractRoles),this.sales=new d.C(this.contractWrapper),this.events=new i.a(this.contractWrapper),this.history=new u(this.contractWrapper,this.events),this.encoder=new o.C(this.contractWrapper),this.estimator=new i.G(this.contractWrapper),this.platformFees=new h.C(this.contractWrapper),this.interceptor=new p.C(this.contractWrapper),this.signature=new f.a(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[t]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await(0,n.aL)(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[(0,n.H)("transfer"),a.L])}mint=(()=>(0,c.f)((async t=>this.erc20.mint.prepare(t))))();mintTo=(()=>(0,c.f)((async(t,r)=>this.erc20.mintTo.prepare(t,r))))();async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}mintBatchTo=(()=>(0,c.f)((async t=>this.erc20.mintBatchTo.prepare(t))))();delegateTo=(()=>(0,c.f)((async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await(0,n.aL)(t)]}))))();burn=(()=>(0,c.f)((t=>this.erc20.burn.prepare(t))))();burnFrom=(()=>(0,c.f)((async(t,r)=>this.erc20.burnFrom.prepare(t,r))))();async prepare(t,r,e){return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}}}]);
//# sourceMappingURL=3578.61bc5fe2.chunk.js.map