"use strict";(self.webpackChunkmango=self.webpackChunkmango||[]).push([[8986],{78527:(t,a,r)=>{r.d(a,{C:()=>e});class e{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},58986:(t,a,r)=>{r.r(a),r.d(a,{Split:()=>h});var e=r(2776),s=r(10974),c=r(33409),n=r(70592),i=r(3494),o=r(36859),p=r(78527),d=r(90755);r(6373),r(40462),r(92377);class h{static contractRoles=(()=>n.dM)();get chainId(){return this._chainId}constructor(t,a,r){let e=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.cs(t,a,s,e,r);this._chainId=i,this.abi=n.bj.parse(s||[]),this.contractWrapper=l,this.storage=r,this.metadata=new o.C(this.contractWrapper,n.c7,this.storage),this.app=new o.b(this.contractWrapper,this.metadata,this.storage),this.roles=new d.C(this.contractWrapper,h.contractRoles),this.encoder=new c.C(this.contractWrapper),this.estimator=new o.G(this.contractWrapper),this.events=new o.a(this.contractWrapper),this.interceptor=new p.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAllRecipients(){const t=[];let a=e.gH.from(0);const r=await this.contractWrapper.read("payeeCount",[]);for(;a.lt(r);)try{const r=await this.contractWrapper.read("payee",[a]);t.push(await this.getRecipientSplitPercentage(r)),a=a.add(1)}catch(s){if("method"in s&&s.method.toLowerCase().includes("payee(uint256)"))break;throw s}return t}async balanceOfAllRecipients(){const t=await this.getAllRecipients(),a={};for(const r of t)a[r.address]=await this.balanceOf(r.address);return a}async balanceOfTokenAllRecipients(t){const[a,r]=await Promise.all([(0,n.aL)(t),this.getAllRecipients()]),e={};for(const s of r)e[s.address]=await this.balanceOfToken(s.address,a);return e}async balanceOf(t){const[a,r,e]=await Promise.all([(0,n.aL)(t),this.contractWrapper.getProvider().getBalance(this.getAddress()),this.contractWrapper.read("totalReleased",[])]),s=r.add(e);return this._pendingPayment(a,s,await this.contractWrapper.read("released",[a]))}async balanceOfToken(t,a){const[e,i]=await Promise.all([(0,n.aL)(a),(0,n.aL)(t)]),o=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,p=new s.NZ(e,o,this.contractWrapper.getProvider()),[d,h,l]=await Promise.all([p.balanceOf(this.getAddress()),this.contractWrapper.read("totalReleased",[e]),this.contractWrapper.read("released",[e,i])]),W=d.add(h),w=await this._pendingPayment(i,W,l);return await(0,c.a)(this.contractWrapper.getProvider(),e,w)}async getRecipientSplitPercentage(t){const[a,r,s]=await Promise.all([(0,n.aL)(t),this.contractWrapper.read("totalShares",[]),this.contractWrapper.read("shares",[t])]);return{address:a,splitPercentage:s.mul(e.gH.from(1e7)).div(r).toNumber()/1e5}}withdraw=(()=>(0,i.f)((async t=>i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await(0,n.aL)(t)]}))))();withdrawToken=(()=>(0,i.f)((async(t,a)=>i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:await Promise.all([(0,n.aL)(a),(0,n.aL)(t)])}))))();distribute=(()=>(0,i.f)((async()=>i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]}))))();distributeToken=(()=>(0,i.f)((async t=>i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await(0,n.aL)(t)]}))))();async _pendingPayment(t,a,r){const[e,s]=await Promise.all([(0,n.aL)(t),this.contractWrapper.read("totalShares",[])]);return a.mul(await this.contractWrapper.read("shares",[e])).div(s).sub(r)}async prepare(t,a,r){return i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:a,overrides:r})}async call(t,a,r){return this.contractWrapper.call(t,a,r)}}}}]);
//# sourceMappingURL=8986.3b33a5e3.chunk.js.map