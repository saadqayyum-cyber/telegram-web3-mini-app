{"version":3,"file":"static/js/4069.a9a87e86.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/errors-9edc08c8.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/react/node_modules/@thirdweb-dev/wallets/evm/connectors/coinbase-wallet/dist/thirdweb-dev-wallets-evm-connectors-coinbase-wallet.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-350fc508.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-9edc08c8.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nclass CoinbaseWalletConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    _defineProperty(this, \"id\", walletIds.coinbase);\n    _defineProperty(this, \"name\", \"Coinbase Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      // Switch to chain if provided\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        try {\n          const chain = await this.switchChain(chainId);\n          id = chain.chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`Connected but failed to switch to desired chain ${chainId}`, e);\n        }\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!this._provider) {\n      return;\n    }\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    if (accounts.length === 0) {\n      throw new Error(\"No accounts found\");\n    }\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!this._provider) {\n      let CoinbaseWalletSDK = (await import('@coinbase/wallet-sdk')).default;\n      // Workaround for Vite dev import errors\n      // https://github.com/vitejs/vite/issues/7112\n      if (typeof CoinbaseWalletSDK !== \"function\" &&\n      // @ts-expect-error This import error is not visible to TypeScript\n      typeof CoinbaseWalletSDK.default === \"function\") {\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      }\n      this._client = new CoinbaseWalletSDK(this.options);\n      const walletExtensionChainId = this._client.walletExtension?.getChainId();\n      const chain = this.chains.find(chain_ => this.options.chainId ? chain_.chainId === this.options.chainId : chain_.chainId === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.chainId;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpc[0];\n      this._provider = this._client.makeWeb3Provider(jsonRpcUrl, chainId);\n    }\n    return this._provider;\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${id}`,\n        slug: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        testnet: false,\n        chain: \"ethereum\",\n        shortName: \"eth\"\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // Indicates chain is not added to provider\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: getValidPublicRPCUrl(chain),\n              // no client id on purpose here\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (this._isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(addError);\n          }\n          throw new AddChainError();\n        }\n      }\n      if (this._isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  _isUserRejectedRequestError(error) {\n    return /(user rejected)/i.test(error.message);\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async getQrUrl() {\n    await this.getProvider();\n    if (!this._client) {\n      throw new Error(\"Coinbase Wallet SDK not initialized\");\n    }\n    return this._client.getQrUrl();\n  }\n}\n\nexport { CoinbaseWalletConnector };\n"],"names":["WagmiConnector","EventEmitter","constructor","_ref","chains","defaultChains","options","super","this","getBlockExplorerUrls","chain","explorers","map","x","url","length","undefined","isChainUnsupported","chainId","some","updateChains","RpcError","Error","message","cause","code","data","Number","isInteger","JSON","stringify","ProviderRpcError","AddChainError","arguments","_defineProperty","ChainNotConfiguredError","connectorId","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","normalizeChainId","parseInt","trim","substring","CoinbaseWalletConnector","reloadOnDisconnect","walletIds","coinbase","accounts","emit","account","utils","id","unsupported","connect","provider","getProvider","setupListeners","type","enable","getChainId","switchChain","e","console","error","providers","test","disconnect","_provider","removeListener","onAccountsChanged","onChainChanged","onDisconnect","close","getAccount","request","method","CoinbaseWalletSDK","default","_client","walletExtensionChainId","walletExtension","find","chain_","jsonRpcUrl","rpc","makeWeb3Provider","getSigner","Promise","all","isAuthorized","params","name","slug","nativeCurrency","decimals","symbol","testnet","shortName","chainName","rpcUrls","getValidPublicRPCUrl","blockExplorerUrls","addError","_isUserRejectedRequestError","on","getQrUrl"],"sourceRoot":""}