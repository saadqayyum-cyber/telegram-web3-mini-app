"use strict";(self.webpackChunkmango=self.webpackChunkmango||[]).push([[789],{81063:(e,t,n)=>{n.d(t,{W:()=>r});var s=n(3754),i=n(64598);class r extends i.A{constructor(e){let{chains:t=s.k9b,options:n}=e;super(),this.chains=t,this.options=n}getBlockExplorerUrls(e){const t=e.explorers?.map((e=>e.url))??[];return t.length>0?t:void 0}isChainUnsupported(e){return!this.chains.some((t=>t.chainId===e))}updateChains(e){this.chains=e}}},66383:(e,t,n)=>{n.d(t,{A:()=>o,C:()=>c,R:()=>h,S:()=>d,U:()=>u,a:()=>a});var s=n(66898);class i extends Error{constructor(e,t){const{cause:n,code:s,data:i}=t;if(!Number.isInteger(s))throw new Error('"code" must be an integer.');if(!e||"string"!==typeof e)throw new Error('"message" must be a nonempty string.');super(`${e}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=s,this.data=i}}class r extends i{constructor(e,t){const{cause:n,code:s,data:i}=t;if(!(Number.isInteger(s)&&s>=1e3&&s<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:n,code:s,data:i})}}class o extends Error{constructor(){super(...arguments),(0,s._)(this,"name","AddChainError"),(0,s._)(this,"message","Error adding chain")}}class c extends Error{constructor(e){let{chainId:t,connectorId:n}=e;super(`Chain "${t}" not configured for connector "${n}".`),(0,s._)(this,"name","ChainNotConfigured")}}class a extends Error{constructor(){super(...arguments),(0,s._)(this,"name","ConnectorNotFoundError"),(0,s._)(this,"message","Connector not found")}}class h extends i{constructor(e){super("Resource unavailable",{cause:e,code:-32002}),(0,s._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(e){super("Error switching chain",{cause:e,code:4902}),(0,s._)(this,"name","SwitchChainError")}}class u extends r{constructor(e){super("User rejected request",{cause:e,code:4001}),(0,s._)(this,"name","UserRejectedRequestError")}}},99223:(e,t,n)=>{function s(e){return"string"===typeof e?Number.parseInt(e,"0x"===e.trim().substring(0,2)?16:10):"bigint"===typeof e?Number(e):e}n.d(t,{n:()=>s})},70789:(e,t,n)=>{n.d(t,{BloctoConnector:()=>p});var s=n(66898),i=n(81063),r=n(66383),o=n(25608),c=n(48987),a=n(38045),h=n(89106),d=n(49661),u=n(80777),g=n(99223);n(64598);class p extends i.W{constructor(e){let{chains:t,options:n={}}=e;super({chains:t,options:n}),(0,s._)(this,"id",d.w.blocto),(0,s._)(this,"name","Blocto"),(0,s._)(this,"ready",!0),this._onAccountsChangedBind=this.onAccountsChanged.bind(this),this._onChainChangedBind=this.onChainChanged.bind(this),this._onDisconnectBind=this.onDisconnect.bind(this)}async connect(e){try{const t=await this.getProvider(e);this.setupListeners(),this.emit("message",{type:"connecting"});const n=await t.request({method:"eth_requestAccounts"}),s=c.getAddress(n[0]),i=await this.getChainId();return{account:s,chain:{id:i,unsupported:this.isChainUnsupported(i)},provider:t}}catch(t){if(this._handleConnectReset(),this._isUserRejectedRequestError(t))throw new r.U(t);throw t}}async disconnect(){const e=await this.getProvider();await e.request({method:"wallet_disconnect"}),this.removeListeners(),this._handleConnectReset()}async getAccount(){const e=await this.getProvider(),t=await e.request({method:"eth_accounts"}),[n]=t||[];if(!n)throw new Error("No accounts found");return n}async getChainId(){const e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return(0,g.n)(t)}getProvider(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this._provider){const t=e??this.chains[0]?.chainId??1,n=this.chains.find((e=>e.chainId===t))?.rpc[0];this._provider=new o.A({ethereum:{chainId:t,rpc:n},appId:this.options.appId})?.ethereum}if(!this._provider)throw new r.a;return Promise.resolve(this._provider)}async getSigner(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[t,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new a.j(t,e).getSigner(n)}async isAuthorized(){return!!this._provider?._blocto?.sessionKeyEnv??!1}async switchChain(e){const t=await this.getProvider(),n=h.hexValue(e),s=this.chains.find((t=>t.chainId===e));if(!s)throw new r.S(new Error("chain not found on connector."));if(!(await t.supportChainList())[`${e}`])throw new r.S(new Error(`Blocto unsupported chain: ${n}`));try{return await t.request({method:"wallet_addEthereumChain",params:[{chainId:n,rpcUrls:(0,u.g)(s)}]}),await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),s}catch(i){if(this._isUserRejectedRequestError(i))throw new r.U(i);throw new r.S(i)}}onAccountsChanged(){}async onChainChanged(e){const t=(0,g.n)(e),n=this.isChainUnsupported(t),s=await this.getAccount();this.emit("change",{chain:{id:t,unsupported:n},account:s})}onDisconnect(){this.emit("disconnect")}async setupListeners(){const e=await this.getProvider();e.on("accountsChanged",this._onAccountsChangedBind),e.on("chainChanged",this._onChainChangedBind),e.on("disconnect",this._onDisconnectBind)}async removeListeners(){const e=await this.getProvider();e.off("accountsChanged",this._onAccountsChangedBind),e.off("chainChanged",this._onChainChangedBind),e.off("disconnect",this._onDisconnectBind)}_isUserRejectedRequestError(e){return/(user rejected)/i.test(e.message)}_handleConnectReset(){this._provider=void 0}}}}]);
//# sourceMappingURL=789.fa981b8f.chunk.js.map