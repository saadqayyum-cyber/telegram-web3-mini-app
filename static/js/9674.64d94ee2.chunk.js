"use strict";(self.webpackChunkmango=self.webpackChunkmango||[]).push([[9674],{26680:(t,r,e)=>{e.d(r,{D:()=>m,F:()=>p,I:()=>c,a:()=>d,b:()=>g,c:()=>u,f:()=>l,g:()=>h,u:()=>f});var a=e(16487),i=e(89106),n=e(2776),s=e(10974),o=e(26382).Buffer;const c=(()=>i.arrayify("0x80ac58cd"))(),d=(()=>i.arrayify("0xd9b67a26"))(),p={name:"Failed to load NFT metadata"};async function l(t,r,e){if(r.startsWith("data:application/json;base64")&&"undefined"!==typeof o){const e=r.split(",")[1],i=JSON.parse(o.from(e,"base64").toString("utf-8"));return a.a.parse({...i,id:n.gH.from(t).toString(),uri:r})}const s=r.replace("{id}",i.hexZeroPad(n.gH.from(t).toHexString(),32).slice(2));let c;try{c=await e.downloadJSON(s)}catch(d){const a=r.replace("{id}",n.gH.from(t).toString());try{c=await e.downloadJSON(a)}catch(l){console.warn(`failed to get token metadata: ${JSON.stringify({tokenId:t.toString(),tokenUri:r})} -- falling back to default metadata`),c=p}}return a.a.parse({...c,id:n.gH.from(t).toString(),uri:r})}async function u(t,r,i,o){let u;const g=(await e.e(4811).then(e.t.bind(e,94811,19))).default,f=new s.NZ(t,g,r),[h,m]=await Promise.all([f.supportsInterface(c),f.supportsInterface(d)]);if(h){const a=(await Promise.resolve().then(e.t.bind(e,1024,19))).default,n=new s.NZ(t,a,r);u=await n.tokenURI(i)}else{if(!m)throw Error("Contract must implement ERC 1155 or ERC 721.");{const a=(await Promise.resolve().then(e.t.bind(e,51146,19))).default,n=new s.NZ(t,a,r);u=await n.uri(i)}}return u?l(i,u,o):a.a.parse({...p,id:n.gH.from(i).toString(),uri:""})}async function g(t,r){return"string"===typeof t?t:await r.upload(a.C.parse(t))}async function f(t,r,e,i){if(function(t){return void 0===t.find((t=>"string"!==typeof t))}(t))return t;if(function(t){return void 0===t.find((t=>"object"!==typeof t))}(t)){return await r.uploadBatch(t.map((t=>a.C.parse(t))),{rewriteFileNames:{fileStartNumber:e||0},onProgress:i?.onProgress})}throw new Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function h(t){const r=t[0].substring(0,t[0].lastIndexOf("/"));for(let e=0;e<t.length;e++){const a=t[e].substring(0,t[e].lastIndexOf("/"));if(r!==a)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${r}' but got '${a}'`)}return r.replace(/\/$/,"")+"/"}const m=100},71450:(t,r,e)=>{e.d(r,{c:()=>n});var a=e(70592),i=e(33409);function n(t){return(0,i.i)(t)?a.aV:t}},78527:(t,r,e)=>{e.d(r,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},48394:(t,r,e)=>{e.d(r,{C:()=>n});var a=e(3494),i=e(70592);class n{featureName=(()=>i.du.name)();constructor(t){this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return i.bH.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}set=(()=>(0,a.f)((async t=>{const r=await i.bH.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})})))()}},79674:(t,r,e)=>{e.r(r),e.d(r,{Marketplace:()=>P});var a=e(2776),i=e(81237),n=e(73594),s=e(64301),o=e(48987),c=e(10974),d=e(3404),p=e(26680),l=e(33409),u=e(70592),g=e(78473),f=e(3494),h=e(36859),m=e(78527),w=e(48394),y=e(90755),W=e(71450),v=e(4265),A=e(16487);let L=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});e(6373),e(40462),e(92377);class C{constructor(t,r){this.contractWrapper=t,this.storage=r,this.encoder=new l.C(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());if(r.listingType!==L.Auction)throw new u.W(this.getAddress(),t.toString(),"Direct","Auction");return await this.mapListing(r)}async getWinningBid(t){await this.validateListing(a.gH.from(t));const r=await this.contractWrapper.read("winningBid",[t]);if(r.offeror!==i.L)return await(0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),r)}async getWinner(t){const r=await this.validateListing(a.gH.from(t)),e=await this.contractWrapper.read("winningBid",[t]),n=a.gH.from(Math.floor(Date.now()/1e3)),s=a.gH.from(r.endTimeInEpochSeconds);if(n.gt(s)&&e.offeror!==i.L)return e.offeror;const o=new h.a(this.contractWrapper),c=(await o.getEvents("AuctionClosed")).find((r=>r.data.listingId.eq(a.gH.from(t))));if(!c)throw new Error(`Could not find auction with listingId ${t} in closed auctions`);return c.data.winningBidder}createListing=(()=>(0,f.f)((async t=>{(0,g.v)(t);const r=await(0,u.aL)(t.assetContractAddress),e=await(0,u.aL)(t.currencyContractAddress);await(0,g.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const i=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e),n=await(0,v.n)(this.contractWrapper.getProvider(),t.reservePricePerToken,e);let s=Math.floor(t.startTimestamp.getTime()/1e3);const o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;s<o&&(s=o);const c=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:i,currencyToAccept:(0,W.c)(e),listingType:L.Auction,quantityToList:t.quantity,reservePricePerToken:n,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.gH.from(s)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return c.setGasLimitMultiple(1.2),c})))();createListingsBatch=(()=>(0,f.f)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode())),e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))});return e.setGasLimitMultiple(1.2),e})))();buyoutListing=(()=>(0,f.f)((async t=>{const r=await this.validateListing(a.gH.from(t)),e=await(0,l.f)(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(t,n.formatUnits(r.buyoutPrice,e.decimals))})))();makeBid=(()=>(0,f.f)((async(t,r)=>{const e=await this.validateListing(a.gH.from(t)),i=await(0,v.n)(this.contractWrapper.getProvider(),r,e.currencyContractAddress);if(i.eq(a.gH.from(0)))throw new Error("Cannot make a bid with 0 value");const n=await this.contractWrapper.read("bidBufferBps",[]),o=await this.getWinningBid(t);if(o){const t=(0,g.a)(o.pricePerToken,i,n);(0,d.A)(t,"Bid price is too low based on the current winning bid and the bid buffer")}else{const t=i,r=a.gH.from(e.reservePrice);(0,d.A)(t.gte(r),"Bid price is too low based on reserve price")}const c=a.gH.from(e.quantity),p=i.mul(c),l=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,p,e.currencyContractAddress,l);const u=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,e.quantity,e.currencyContractAddress,i,s.Is],overrides:l});return u.setGasLimitMultiple(1.2),u})))();cancelListing=(()=>(0,f.f)((async t=>{const r=await this.validateListing(a.gH.from(t)),e=a.gH.from(Math.floor(Date.now()/1e3)),n=a.gH.from(r.startTimeInEpochSeconds),s=await this.contractWrapper.read("winningBid",[t]);if(e.gt(n)&&s.offeror!==i.L)throw new u.t(t.toString());const o=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.gH.from(t),await this.contractWrapper.getSignerAddress()]});return o.setGasLimitMultiple(1.2),o})))();closeListing=(()=>(0,f.f)((async(t,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const e=await this.validateListing(a.gH.from(t));try{const e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.gH.from(t),r]});return e.setGasLimitMultiple(1.2),e}catch(i){throw i.message.includes("cannot close auction before it has ended")?new u.w(t.toString(),e.endTimeInEpochSeconds.toString()):i}})))();executeSale=(()=>(0,f.f)((async t=>{const r=await this.validateListing(a.gH.from(t));try{const e=await this.getWinningBid(t);(0,d.A)(e,"No winning bid found");const a=this.encoder.encode("closeAuction",[t,r.sellerAddress]),i=this.encoder.encode("closeAuction",[t,e.buyerAddress]),n=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[a,i]});return n.setGasLimitMultiple(1.2),n}catch(e){throw e.message.includes("cannot close auction before it has ended")?new u.w(t.toString(),r.endTimeInEpochSeconds.toString()):e}})))();updateListing=(()=>(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.reservePrice,t.buyoutPrice,t.currencyContractAddress,t.startTimeInEpochSeconds,t.endTimeInEpochSeconds]});return r.setGasLimitMultiple(1.2),r})))();async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getMinimumNextBid(t){const[r,e,i]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(t),this.validateListing(a.gH.from(t))]),n=e?e.currencyValue.value:i.reservePrice,s=n.add(n.mul(r).div(1e4));return(0,l.a)(this.contractWrapper.getProvider(),i.currencyContractAddress,s)}async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.gH.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,l.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInEpochSeconds:t.startTime,asset:await(0,p.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),reservePriceCurrencyValuePerToken:await(0,l.a)(this.contractWrapper.getProvider(),t.currency,t.reservePricePerToken),reservePrice:a.gH.from(t.reservePricePerToken),endTimeInEpochSeconds:t.endTime,sellerAddress:t.tokenOwner,type:L.Auction}}}class T{constructor(t,r){this.contractWrapper=t,this.storage=r}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===i.L)throw new u.L(this.getAddress(),t.toString());if(r.listingType!==L.Direct)throw new u.W(this.getAddress(),t.toString(),"Auction","Direct");return await this.mapListing(r)}async getActiveOffer(t,r){await this.validateListing(a.gH.from(t)),(0,d.A)(o.isAddress(r),"Address must be a valid address");const e=await this.contractWrapper.read("offers",[t,await(0,u.aL)(r)]);if(e.offeror!==i.L)return await(0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),e)}createListing=(()=>(0,f.f)((async t=>{(0,g.v)(t);const r=await(0,u.aL)(t.assetContractAddress),e=await(0,u.aL)(t.currencyContractAddress);await(0,g.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const i=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e);let n=Math.floor(t.startTimestamp.getTime()/1e3);const s=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;n<s&&(n=s);const o=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:i,currencyToAccept:(0,W.c)(e),listingType:L.Direct,quantityToList:t.quantity,reservePricePerToken:i,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.gH.from(n)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return o.setGasLimitMultiple(1.2),o})))();createListingsBatch=(()=>(0,f.f)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode())),e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))});return e.setGasLimitMultiple(1.2),e})))();makeOffer=(()=>(0,f.f)((async(t,r,e,i,n)=>{if((0,l.i)(e))throw new Error("You must use the wrapped native token address when making an offer with a native token");const o=await(0,v.n)(this.contractWrapper.getProvider(),i,e);try{await this.getListing(t)}catch(h){throw console.error("Failed to get listing, err =",h),new Error(`Error getting the listing with id ${t}`)}const c=a.gH.from(r),d=a.gH.from(o).mul(c),p=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,d,e,p);let u=s.Is;n&&(u=a.gH.from(Math.floor(n.getTime()/1e3)));const g=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,r,e,o,u],overrides:p});return g.setGasLimitMultiple(1.2),g})))();acceptOffer=(()=>(0,f.f)((async(t,r)=>{await this.validateListing(a.gH.from(t));const e=await(0,u.aL)(r),i=await this.contractWrapper.read("offers",[t,e]),n=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[t,e,i.currency,i.pricePerToken]});return n.setGasLimitMultiple(1.2),n})))();buyoutListing=(()=>(0,f.f)((async(t,r,e)=>{const i=await this.validateListing(a.gH.from(t)),{valid:n,error:s}=await this.isStillValidListing(i,r);if(!n)throw new Error(`Listing ${t} is no longer valid. ${s}`);const o=e||await this.contractWrapper.getSignerAddress(),c=a.gH.from(r),d=a.gH.from(i.buyoutPrice).mul(c),p=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,d,i.currencyContractAddress,p);const l=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[t,o,c,i.currencyContractAddress,d],overrides:p});return l.setGasLimitMultiple(1.2),l})))();updateListing=(()=>(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.buyoutPrice,t.buyoutPrice,await(0,u.aL)(t.currencyContractAddress),t.startTimeInSeconds,t.secondsUntilEnd]});return r.setGasLimitMultiple(1.2),r})))();cancelListing=(()=>(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[t]});return r.setGasLimitMultiple(1.2),r})))();async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.gH.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,l.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInSeconds:t.startTime,asset:await(0,p.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),secondsUntilEnd:t.endTime,sellerAddress:t.tokenOwner,type:L.Direct}}async isStillValidListing(t,r){if(!await(0,g.i)(this.contractWrapper.getProvider(),this.getAddress(),t.assetContractAddress,t.tokenId,t.sellerAddress))return{valid:!1,error:`Token '${t.tokenId}' from contract '${t.assetContractAddress}' is not approved for transfer`};const a=this.contractWrapper.getProvider(),i=(await e.e(4811).then(e.t.bind(e,94811,19))).default,n=new c.NZ(t.assetContractAddress,i,a),s=await n.supportsInterface(p.I),o=await n.supportsInterface(p.a);if(s){const r=(await Promise.resolve().then(e.t.bind(e,57305,19))).default,i=new c.NZ(t.assetContractAddress,r,a);let n;try{n=await i.ownerOf(t.tokenId)}catch(d){}const s=n?.toLowerCase()===t.sellerAddress.toLowerCase();return{valid:s,error:s?void 0:`Seller is not the owner of Token '${t.tokenId}' from contract '${t.assetContractAddress} anymore'`}}if(o){const i=(await Promise.resolve().then(e.t.bind(e,59355,19))).default,n=new c.NZ(t.assetContractAddress,i,a),s=(await n.balanceOf(t.sellerAddress,t.tokenId)).gte(r||t.quantity);return{valid:s,error:s?void 0:`Seller does not have enough balance of Token '${t.tokenId}' from contract '${t.assetContractAddress} to fulfill the listing`}}return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}}class P{static contractRoles=(()=>u.dH)();get chainId(){return this._chainId}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new u.cs(t,r,i,a,e);this._chainId=n,this.abi=u.bj.parse(i||[]),this.contractWrapper=s,this.storage=e,this.metadata=new h.C(this.contractWrapper,u.b$,this.storage),this.app=new h.b(this.contractWrapper,this.metadata,this.storage),this.roles=new y.C(this.contractWrapper,P.contractRoles),this.encoder=new l.C(this.contractWrapper),this.estimator=new h.G(this.contractWrapper),this.direct=new T(this.contractWrapper,this.storage),this.auction=new C(this.contractWrapper,this.storage),this.events=new h.a(this.contractWrapper),this.platformFees=new w.C(this.contractWrapper),this.interceptor=new m.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===i.L)throw new u.L(this.getAddress(),t.toString());switch(r.listingType){case L.Auction:return await this.auction.mapListing(r);case L.Direct:return await this.direct.mapListing(r);default:throw new Error(`Unknown listing type: ${r.listingType}`)}}async getActiveListings(t){const r=await this.getAllListingsNoFilter(!0),e=this.applyFilter(r,t),i=a.gH.from(Math.floor(Date.now()/1e3));return e.filter((t=>t.type===L.Auction&&a.gH.from(t.endTimeInEpochSeconds).gt(i)&&a.gH.from(t.startTimeInEpochSeconds).lte(i)||t.type===L.Direct&&a.gH.from(t.quantity).gt(0)))}async getAllListings(t){const r=await this.getAllListingsNoFilter(!1);return this.applyFilter(r,t)}getAll=this.getAllListings;async getTotalCount(){return await this.contractWrapper.read("totalListings",[])}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.read("hasRole",[(0,u.H)("lister"),i.L])}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getTimeBufferInSeconds(){return this.contractWrapper.read("timeBuffer",[])}async getOffers(t){const r=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:t}});return await Promise.all(r.map((r=>(0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),{quantityWanted:r.data.quantityWanted,pricePerToken:r.data.quantityWanted.gt(0)?r.data.totalOfferAmount.div(r.data.quantityWanted):r.data.totalOfferAmount,currency:r.data.currency,offeror:r.data.offeror}))))}buyoutListing=(()=>(0,f.f)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());switch(a.listingType){case L.Direct:return(0,d.A)(void 0!==r,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(t,r,e);case L.Auction:return await this.auction.buyoutListing.prepare(t);default:throw Error(`Unknown listing type: ${a.listingType}`)}})))();makeOffer=(()=>(0,f.f)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());const i=await this.contractWrapper.getChainID();switch(a.listingType){case L.Direct:return(0,d.A)(e,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(t,e,(0,l.i)(a.currency)?u.aW[i].wrapped.address:a.currency,r);case L.Auction:return await this.auction.makeBid.prepare(t,r);default:throw Error(`Unknown listing type: ${a.listingType}`)}})))();setBidBufferBps=(()=>(0,f.f)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getTimeBufferInSeconds();return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[r,a.gH.from(t)]})})))();setTimeBufferInSeconds=(()=>(0,f.f)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getBidBufferBps();return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[a.gH.from(t),r]})})))();allowListingFromSpecificAssetOnly=(()=>(0,f.f)((async t=>{const r=[];return(await this.roles.get("asset")).includes(i.L)&&r.push(this.encoder.encode("revokeRole",[(0,u.H)("asset"),i.L])),r.push(this.encoder.encode("grantRole",[(0,u.H)("asset"),t])),f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r]})})))();allowListingFromAnyAsset=(()=>(0,f.f)((async()=>{const t=[],r=await this.roles.get("asset");for(const e in r)t.push(this.encoder.encode("revokeRole",[(0,u.H)("asset"),e]));return t.push(this.encoder.encode("grantRole",[(0,u.H)("asset"),i.L])),f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[t]})})))();async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.read("totalListings",[])).toNumber()).keys()).map((async r=>{let e;try{e=await this.getListing(r)}catch(a){return a instanceof u.L?void 0:void console.warn(`Failed to get listing ${r}' - skipping. Try 'marketplace.getListing(${r})' to get the underlying error.`)}if(e.type===L.Auction)return e;if(t){const{valid:t}=await this.direct.isStillValidListing(e);if(!t)return}return e})))).filter((t=>void 0!==t))}applyFilter(t,r){let e=[...t];const i=a.gH.from(r?.start||0).toNumber(),n=a.gH.from(r?.count||p.D).toNumber();return r&&(r.seller&&(e=e.filter((t=>t.sellerAddress.toString().toLowerCase()===r?.seller?.toString().toLowerCase()))),r.tokenContract&&(e=e.filter((t=>t.assetContractAddress.toString().toLowerCase()===r?.tokenContract?.toString().toLowerCase()))),void 0!==r.tokenId&&(e=e.filter((t=>t.tokenId.toString()===r?.tokenId?.toString()))),e=e.filter(((t,r)=>r>=i)),e=e.slice(0,n)),e}async prepare(t,r,e){return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}},78473:(t,r,e)=>{e.d(r,{a:()=>g,g:()=>f,h:()=>p,i:()=>d,m:()=>u,v:()=>l});var a=e(10974),i=e(2776),n=e(3404),s=e(26680),o=e(70592),c=e(33409);async function d(t,r,i,n,o){try{const d=(await e.e(4811).then(e.t.bind(e,94811,19))).default,p=new a.NZ(i,d,t),[l,u]=await Promise.all([p.supportsInterface(s.I),p.supportsInterface(s.a)]);if(l){const s=(await Promise.resolve().then(e.t.bind(e,57305,19))).default,d=new a.NZ(i,s,t);if(await d.isApprovedForAll(o,r))return!0;let p;try{p=await d.getApproved(n)}catch(c){}return p?.toLowerCase()===r.toLowerCase()}if(u){const n=(await Promise.resolve().then(e.t.bind(e,59355,19))).default,s=new a.NZ(i,n,t);return await s.isApprovedForAll(o,r)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(d){return console.error("Failed to check if token is approved",d),!1}}async function p(t,r,a,i,n){const c=(await e.e(4811).then(e.t.bind(e,94811,19))).default,d=new o.cs(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,l]=await Promise.all([d.read("supportsInterface",[s.I]),d.read("supportsInterface",[s.a])]);if(p){const s=(await Promise.resolve().then(e.t.bind(e,57305,19))).default,c=new o.cs(t.getSignerOrProvider(),a,s,t.options,t.storage);if(!await c.read("isApprovedForAll",[n,r])){(await c.read("getApproved",[i])).toLowerCase()===r.toLowerCase()||await c.sendTransaction("setApprovalForAll",[r,!0])}}else{if(!l)throw Error("Contract must implement ERC 1155 or ERC 721.");{const i=(await Promise.resolve().then(e.t.bind(e,59355,19))).default,s=new o.cs(t.getSignerOrProvider(),a,i,t.options,t.storage);await s.read("isApprovedForAll",[n,r])||await s.sendTransaction("setApprovalForAll",[r,!0])}}}function l(t){if((0,n.A)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,n.A)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,n.A)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,n.A)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,n.A)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,n.A)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type)(0,n.A)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await(0,c.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function g(t,r,e){if(e=i.gH.from(e),t=i.gH.from(t),r=i.gH.from(r),t.eq(i.gH.from(0)))return!1;return r.sub(t).mul(o.dE).div(t).gte(e)}async function f(t,r,e){const a=[];for(;r-t>s.D;)a.push(e(t,t+s.D-1)),t+=s.D;return a.push(e(t,r-1)),await Promise.all(a)}},16487:(t,r,e)=>{e.d(r,{B:()=>c,C:()=>d,N:()=>p,a:()=>l,s:()=>u});var a=e(70592),i=e(97665),n=e(33409);const s=(()=>i.z.object({}).catchall(i.z.union([a.cx,i.z.unknown()])))(),o=(()=>i.z.union([i.z.array(i.z.array(s)).transform((t=>t.flat())),i.z.array(s),s]).optional().nullable())(),c=(()=>i.z.object({name:i.z.union([i.z.string(),i.z.number()]).optional().nullable(),description:i.z.string().nullable().optional().nullable(),image:a.cy.nullable().optional(),animation_url:a.cy.optional().nullable()}))(),d=(()=>c.extend({external_url:a.cy.nullable().optional(),background_color:a.cz.optional().nullable(),properties:o,attributes:o}).catchall(i.z.union([a.cx,i.z.unknown()])))(),p=(()=>i.z.union([d,i.z.string()]))(),l=(()=>d.extend({id:i.z.string(),uri:i.z.string(),image:i.z.string().nullable().optional(),external_url:i.z.string().nullable().optional(),animation_url:i.z.string().nullable().optional()}))();async function u(t,r,i,s){if(!(0,n.i)(i)){const n=(await Promise.resolve().then(e.t.bind(e,96337,19))).default,o=t.getSigner(),c=t.getProvider(),d=new a.cs(o||c,i,n,t.options,t.storage),p=await t.getSignerAddress(),l=t.address;return(await d.read("allowance",[p,l])).lt(r)&&await d.sendTransaction("approve",[l,r]),s}s.value=r}}}]);
//# sourceMappingURL=9674.64d94ee2.chunk.js.map