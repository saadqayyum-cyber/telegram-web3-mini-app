(self.webpackChunkmango=self.webpackChunkmango||[]).push([[9376],{78333:(a,e,t)=>{"use strict";t.d(e,{SafeConnector:()=>w});var s=t(66898),n=t(60091),r=t(73147),i=t(10974),o=t(94385),c=t(81237),f=t(48987),h=t(14984),d=t(57457),g=t.n(d),p=t(61317),l=t.n(p);t(64598);const A={1:"https://safe-transaction-mainnet.safe.global",11155111:"https://safe-transaction-sepolia.safe.global",10:"https://safe-transaction-optimism.safe.global",56:"https://safe-transaction-bsc.safe.global",100:"https://safe-transaction-gnosis-chain.safe.global",137:"https://safe-transaction-polygon.safe.global",43114:"https://safe-transaction-avalanche.safe.global",42161:"https://safe-transaction-arbitrum.safe.global",42220:"https://safe-transaction-celo.safe.global",8453:"https://safe-transaction-base.safe.global",1313161554:"https://safe-transaction-aurora.safe.global",1101:"https://safe-transaction-zkevm.safe.global",324:"https://safe-transaction-zksync.safe.global"},b={1:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",137:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",56:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",42161:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",1313161554:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",43114:"0x98FFBBF51bb33A056B08ddf711f289936AafF717",10:"0x98FFBBF51bb33A056B08ddf711f289936AafF717",42220:"0x98FFBBF51bb33A056B08ddf711f289936AafF717",100:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",11155111:"0x98FFBBF51bb33A056B08ddf711f289936AafF717",8453:"0x98FFBBF51bb33A056B08ddf711f289936AafF717",1101:"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2",324:"0x357147caf9C0cCa67DfA0CF5369318d8193c8407"},u=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"msgHash",type:"bytes32"}],name:"SignMsg",type:"event"},{inputs:[{internalType:"bytes",name:"message",type:"bytes"}],name:"getMessageHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"signMessage",outputs:[],stateMutability:"nonpayable",type:"function"}];class w extends n.C{constructor(){super(),(0,s._)(this,"supportedChains",w.supportedChains),(0,s._)(this,"id","safe-wallet"),(0,s._)(this,"ready",!0),(0,s._)(this,"name","Safe Wallet"),this.ready=!0}async connect(a){if(!(a.chain.chainId in A))throw new Error("Chain not supported by Safe");return this.safeSigner=await this.createSafeSigner(a),await this.getAddress()}async createSafeSigner(a){this.personalWallet=a.personalWallet;const e=await a.personalWallet.getSigner(),t=a.safeAddress,s=a.chain.chainId;if(!e)throw new Error("cannot create Gnosis Safe signer without a personal signer");if(await e.getChainId()!==s)throw new Error("chainId of personal signer has to match safe chainId");if(!t)throw new Error("safeAddress is required");if(!s)throw new Error("safeChainId is required");const n=A[s],f=b[s];if(!n||!f)throw new Error("Chain not supported");const d=new(l())({ethers:r,signerOrProvider:e}),p=await g().create({ethAdapter:d,safeAddress:t}),w=new h.SafeService(n),y=new h.SafeEthersSigner(p,w,e.provider);return y.signMessage=async a=>{const t=new i.Uq(f,u).interface.encodeFunctionData("signMessage",[o.A(a)]),s=f,n=c.L,r=c.L,h=await p.createTransaction({safeTransactionData:{to:s,value:"0",operation:1,data:t,baseGas:5e4,safeTxGas:5e4,gasPrice:0,gasToken:n,refundReceiver:r}}),d=await p.getTransactionHash(h),g=await p.signTransactionHash(d);for(await w.proposeTx(p.getAddress(),d,h,g);;){try{const a=await w.getSafeTxDetails(d);if(a.transactionHash){await(e.provider?.waitForTransaction(a.transactionHash));break}}catch(l){}await new Promise((a=>setTimeout(a,5e3)))}return"0x"},this.previousConnector=a.personalWallet,y}async disconnect(){this.safeSigner=void 0,this.previousConnector=void 0}async getAddress(){const a=await this.getSigner();return await a.getAddress()}async getChainId(){return(await this.getSigner()).getChainId()}async getProvider(){const a=(await this.getSigner()).provider;if(!a)throw new Error("No provider available");return a}async getSigner(){if(!this.safeSigner)throw new Error("not connected - please call connect() first");return this.safeSigner}async isConnected(){try{return!!await this.getAddress()}catch(a){return!1}}onAccountsChanged(a){0===a.length?this.emit("disconnect"):a[0]&&this.emit("change",{account:f.getAddress(a[0])})}onDisconnect(){this.emit("disconnect")}switchChain(){throw new Error("Safe connector does not support switching chains")}updateChains(){}async setupListeners(){}}(0,s._)(w,"supportedChains",(()=>Object.keys(A))())},77542:()=>{},59169:()=>{},86833:()=>{}}]);
//# sourceMappingURL=9376.edef8dd1.chunk.js.map